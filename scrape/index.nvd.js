// scrape/index.nvd.js

const axios = require('axios');
const cheerio = require('cheerio');

const siteUrl = 'https://nvd.nist.gov/vuln/detail/';
const scrapeData = async (cve) => {
	const response = await axios(siteUrl + cve);
	const $ = cheerio.load(response.data);

	const tableRows = $('table[data-testid="vuln-hyperlinks-table"]').find('tbody > tr');
	for (let tableRow of tableRows) {
		const tds = $(tableRow).find('td');

		// check for 'Vendor Advisory' badge
		const spans = $(tds[1])
			.find('span.badge')
			.filter((j, s) => s.childNodes[0].data === 'Vendor Advisory');

		if (spans.length > 0) {
			const wso2Response = await axios($(tds[0]).find('a').attr('href'));
			const $wso2 = cheerio.load(wso2Response.data);

			const pElems = $wso2('div#main-content').find('p');
			let gitlinks = [];
			$wso2('div#main-content')
				.find('a')
				.map((x, hyper) => {
					if ($wso2(hyper).attr('href').includes('github')) gitlinks.push($wso2(hyper).attr('href'));
				});
			$wso2(pElems[6]).find('br').replaceWith('\n');

			return {
				name: cve,
				nvd: {
					description: $('p[data-testid="vuln-description"]').text(),
					wso2: $(tds[0]).find('a').attr('href'),
					link: siteUrl + cve,
				},
				wso2: {
					published: $wso2(pElems[0]).text(),
					products: $wso2(pElems[6]).text().split('\n'),
					git: gitlinks,
				},
			};
		}
	}
};

exports.scrapeData = scrapeData;
